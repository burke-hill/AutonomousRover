<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="basic_mobile_bot">  
  <static>false</static>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
  <link name="base_footprint"/>

  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">

    <collision name="base_collision">
      <pose>0 0 0.055 0 0 0</pose>
      <geometry>
        <box>
          <size>0 0 0.055 0 0 0</size>
        </box>
      </geometry>
    </collision>

    <visual name="base_visual">
     <pose>0 0 0.055 0 0 0</pose>
      <geometry>
      	<box>
          <size>0.2 0.09 0.06</size>
        </box>
       </geometry>
    </visual>
  </link>

  <!-- *********************** IMU SENSOR SETUP **************************  -->
  <link name="imu_link">
    <gravity>true</gravity>
    <sensor name="bmb_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <orientation>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </z>
        </orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="basic_mobile_bot_imu" filename="libgazebo_ros_imu_sensor.so">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>imu_link</frame_name>
        <ros>
          <namespace>/imu</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
  </link>

  <!-- *********************** GPS SETUP *********************************  -->
  <link name="gps_link">
    <sensor name="bmb_gps" type="gps">
      <always_on>true</always_on>
      <update_rate>10.0</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1e-2</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="basic_mobile_bot_gps" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <remapping>~/out:=gps/fix</remapping>
        </ros>
      </plugin>
    </sensor>
  </link>
  
  
  <!-- *********************** DEPTH CAMERA ******************************  -->
	<!-- The depth camera (e.g. Intel Realsense camera). -->
	<link name="camera_depth_frame">
	  <pose>0.12 0 0.65 -1.5708 0 -1.5708</pose>
	</link>
	 
	<link name="camera_link">
	  <pose>0.12 0 0.056 0 0 0</pose>
	   
	  <visual name="camera_visual">
	    <pose>-0.005 0 0 0 0 0</pose>
	    <geometry>
	      <box>
		<size>0.015 0.08 0.022</size>
	      </box>
	    </geometry>
	    <material>
	      <ambient>0 0 0 1.0</ambient>
	      <diffuse>0 0 0 1.0</diffuse>
	      <specular>0.0 0.0 0.0 1.0</specular>
	      <emissive>0.0 0.0 0.0 1.0</emissive>
	    </material>
	  </visual>    
	   
	  <sensor name="depth_camera" type="camera">
	    <always_on>true</always_on>
	    <visualize>false</visualize>
	    <update_rate>5</update_rate>
	    <camera name="camera">
	      <horizontal_fov>1.02974</horizontal_fov>
	      <image>
		<width>640</width>
		<height>480</height>
		<format>R8G8B8</format>
	      </image>
	      <clip>
		<near>0.02</near>
		<far>10</far>
	      </clip>
	      <noise>
		<type>gaussian</type>
		<!-- Noise is sampled independently per pixel on each frame.
		     That pixel's noise value is added to each of its color
		      channels, which at that point lie in the range [0,1]. -->
		<mean>0.0</mean>
		<stddev>0.007</stddev>
	      </noise>
	    </camera>
	    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
	      <camera_name>depth_camera</camera_name>
	      <frame_name>camera_depth_frame</frame_name>
	      <hack_baseline>0</hack_baseline>
	      <min_depth>0.001</min_depth>
	    </plugin>
	  </sensor>
	</link>
  
  <!-- ****************************** LIDAR *****************************    -->
  <link name="lidar_link">    
    <inertial>
      <pose>0.13 0 0.10 0 0 0</pose>
      <inertia>
        <ixx>0.001</ixx>
        <ixy>0.000</ixy>
        <ixz>0.000</ixz>
        <iyy>0.001</iyy>
        <iyz>0.000</iyz>
        <izz>0.001</izz>
      </inertia>
      <mass>0.114</mass>
    </inertial>

    <collision name="lidar_collision">
      <pose>0 0 0.1 0 0 0</pose>
      <geometry>
        <cylinder>
          <radius>0.0508</radius>
          <length>0.18</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="lidar_visual">
      <pose>0 0 0.1 0 0 0</pose>
      <geometry>
        <cylinder>
          <radius>0.02</radius>
          <length>0.02</length>
        </cylinder>
      </geometry>
      <material>
        <ambient>0.0 0.0 0.0 1.0</ambient>
        <diffuse>0.0 0.0 0.0 1.0</diffuse>
        <specular>0.0 0.0 0.0 1.0</specular>
        <emissive>0.0 0.0 0.0 1.0</emissive>
      </material>
    </visual>

    <sensor name="lidar" type="ray">
      <pose>0 0 0.1 0 0 0</pose>
      <always_on>true</always_on>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>8000</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>15.0</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </link>

  <!-- *********************** DRIVE WHEELS ******************************  -->
  
  <link name="bl_link">
    <pose>-0.2 0.15 -0.05 0 1.570796 1.570796</pose>
    
    <collision name="bl_link_collision">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="bl_link_visual">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </visual>
  </link>

  <link name="br_link">
    <pose>-0.2 -0.15 -0.05 0 1.570796 1.570796</pose>
    
    <collision name="br_link_collision">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="br_link_visual">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </visual>
  </link>
  
    <link name="fl_link">
    <pose>0.2 0.15 -0.05 0 1.570796 1.570796</pose>
    
    <collision name="fl_link_collision">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="fl_link_visual">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </visual>
  </link>
  
  
    <link name="fr_link">
    <pose>0.2 -0.15 -0.05 0 1.570796 1.570796</pose>
    
    <collision name="fr_link_collision">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="fr_link_visual">
      <geometry>
        <cylinder>
          <radius>0.035</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
    </visual>
  </link>



  <!-- ************************ JOINTS ***********************************  -->
  <!-- Pose of the joint is the same as the child link frame -->
  <!-- Axis is the axis of rotation relative to the child link frame -->
  
  <joint name="base_joint" type="fixed">
    <parent>base_footprint</parent>
    <child>base_link</child>
    <pose>0 0 0 0 0</pose>
  </joint>

  <joint name="bl_joint" type="revolute">
    <parent>base_link</parent>
    <child>bl_link</child>
    <pose>0 0 0 0 0 0</pose>
    <axis>
      <xyz>0 0 1</xyz>
    </axis>
  </joint>

  <joint name="br_joint" type="revolute">
    <parent>base_link</parent>
    <child>br_link</child>
    <pose>0 0 0 0 0 0</pose>
    <axis>
      <xyz>0 0 1</xyz>
    </axis>
  </joint>
  
   <joint name="fl_joint" type="revolute">
    <parent>base_link</parent>
    <child>fl_link</child>
    <pose>0 0 0 0 0 0</pose>
    <axis>
      <xyz>0 0 1</xyz>
    </axis>
  </joint>
  
   <joint name="fr_joint" type="revolute">
    <parent>base_link</parent>
    <child>fr_link</child>
    <pose>0 0 0 0 0 0</pose>
    <axis>
      <xyz>0 0 1</xyz>
    </axis>
  </joint>

   <joint name="lidar_joint" type="fixed">
    <parent>base_link</parent>
    <child>lidar_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>
  
  <joint name="camera_joint" type="fixed">
    <parent>base_link</parent>
    <child>camera_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>

  <joint name="imu_joint" type="fixed">
    <parent>base_link</parent>
    <child>imu_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>  

  <joint name="gps_joint" type="fixed">
    <parent>base_link</parent>
    <child>gps_link</child>
    <pose>0 0 0 0 0 0</pose>
  </joint>  

 <!-- *********************** WHEEL ODOMETRY ***************************    -->
  <plugin name="basic_mobile_bot_diff_drive" filename="libgazebo_ros_diff_drive.so">

    <update_rate>30</update_rate>
    <num_wheel_pairs>2</num_wheel_pairs>
    <!-- wheels -->
    <left_joint>bl_joint</left_joint>
    <right_joint>br_joint</right_joint>
    <left_joint>fl_joint</left_joint>
    <right_joint>fr_joint</right_joint>


    <!-- kinematics -->
    <wheel_separation>0.27</wheel_separation>
    <wheel_diameter>0.15</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>2</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <!-- Receive velocity commands on this ROS topic -->
    <command_topic>cmd_vel</command_topic>

    <!-- output -->
    <!-- When false, publish no wheel odometry data to a ROS topic -->
    <publish_odom>true</publish_odom>

    <!-- When true, publish coordinate transform from odom to base_footprint -->
    <!-- I usually use the robot_localization package to publish this transform -->   
    <publish_odom_tf>false</publish_odom_tf>
    
    <!-- When true, publish coordinate transform from base_link to the wheels -->
    <!-- The robot_state_publisher package is often used to publish this transform -->   
    <publish_wheel_tf>false</publish_wheel_tf>

    <odometry_topic>odom</odometry_topic>
    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_footprint</robot_base_frame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometry_source>1</odometry_source>

    <!-- Change the ROS topic we will publish the odometry data to -->
    <ros>
      <remapping>odom:=wheel/odometry</remapping>
    </ros>

  </plugin>

 <!-- *********************** JOINT STATE PUBLISHER *********************   -->
  
  <plugin name="basic_mobile_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
    <ros>
      <remapping>~/out:=joint_states</remapping>
    </ros>
    <update_rate>30</update_rate>
    <joint_name>bl_joint</joint_name>
    <joint_name>br_joint</joint_name>
    <joint_name>fl_joint</joint_name>
    <joint_name>fr_joint</joint_name>
  </plugin>   
  
  </model>
</sdf>
